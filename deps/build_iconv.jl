using BinaryProvider

# This is where all binaries will get installed
const prefix = Prefix(!isempty(ARGS) ? ARGS[1] : joinpath(@__DIR__,"usr"))

products_iconv = [
LibraryProduct(prefix, String["libcharset"]),
LibraryProduct(prefix, String["libiconv"]),
ExecutableProduct(prefix, "/home/travis/build/davidanthoff/IConvBuilder/bin/iconv")
]

# Download binaries from hosted location
bin_prefix = "https://github.com/davidanthoff/IConvBuilder/releases/download/v1.15+build.1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    BinaryProvider.Linux(:aarch64, :glibc) => ("$bin_prefix/libiconv.aarch64-linux-gnu.tar.gz", "56438b062f39e50e41bea387637cb02166de2fa4ac1749b4ff99ef29e4810b2a"),
    BinaryProvider.Linux(:armv7l, :glibc) => ("$bin_prefix/libiconv.arm-linux-gnueabihf.tar.gz", "3d4f617769520a0b40117200741e3ae560867313a7d5a657f8f202c858279473"),
    BinaryProvider.Linux(:i686, :glibc) => ("$bin_prefix/libiconv.i686-linux-gnu.tar.gz", "a56950322c16685fa755d4e5cce2f451840050097283aba54c75f126e40153f8"),
    BinaryProvider.Windows(:i686) => ("$bin_prefix/libiconv.i686-w64-mingw32.tar.gz", "bb7b4509af0ca5e620e1cce41a7069cfafc6a323b48c58edae0c9ca8254518c0"),
    BinaryProvider.Linux(:powerpc64le, :glibc) => ("$bin_prefix/libiconv.powerpc64le-linux-gnu.tar.gz", "a1dec2828079dc85b294b88f9b443eecf9b14dae649f4350a9000d5b5a857649"),
    BinaryProvider.MacOS() => ("$bin_prefix/libiconv.x86_64-apple-darwin14.tar.gz", "8c3980270f08febab1816960503a9cf02821d526c412c5b33ab99e925012a82e"),
    BinaryProvider.Linux(:x86_64, :glibc) => ("$bin_prefix/libiconv.x86_64-linux-gnu.tar.gz", "056e004c4278e0bf09d85fcd46037ecf4d01c3b40119d1ad5a21e05ee89d57ee"),
    BinaryProvider.Windows(:x86_64) => ("$bin_prefix/libiconv.x86_64-w64-mingw32.tar.gz", "5e0c71494abdc17aa361f0fc8c034f3b0981c2fe3568adc19def2080f1100a54"),
)
if platform_key() in keys(download_info)
    # First, check to see if we're all satisfied
    if any(!satisfied(p; verbose=true) for p in products_iconv)
        # Download and install binaries
        url, tarball_hash = download_info[platform_key()]
        install(url, tarball_hash; prefix=prefix, force=true, verbose=true)
    end
else
    error("Your platform $(Sys.MACHINE) is not supported by this package!")
end
